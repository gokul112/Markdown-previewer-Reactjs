{"ast":null,"code":"import _slicedToArray from\"/Users/graj/projects/Markdown-previewer-Reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import{Form}from'react-bootstrap';var marked=require('marked');function App(){var defaultMarkdown=\"# Welcome to my React Markdown Previewer!\\n## This is a sub-heading...  \\n### And here's some other cool stuff:\\n  \\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n  \\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.com), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | ------------- \\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n\\n\\n1. And there are numbererd lists too.\\n1. Use just 1s if you want! \\n1. But the list goes on...\\n- Even if you use dashes or asterisks.\\n* And last but not least, let's not forget embedded images:\\n\\n![React Logo w/ Text](https://goo.gl/Umyytc)\\n\";var _useState=useState(defaultMarkdown),_useState2=_slicedToArray(_useState,2),markdown=_useState2[0],setMarkdown=_useState2[1];var setMarkdowntext=function setMarkdowntext(e){setMarkdown(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicMarkdown\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"text\"},\"MarkDown Input\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"textarea\",rows:\"40\",type:\"text\",placeholder:\"Enter Markdown text\",value:markdown,onChange:setMarkdowntext}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formBasicMarkOutput\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"text1\"},\"MarkDown Output\"),/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:marked(markdown)}}))))));}export default App;","map":{"version":3,"sources":["/Users/graj/projects/Markdown-previewer-Reactjs/src/App.js"],"names":["React","useState","Form","marked","require","App","defaultMarkdown","markdown","setMarkdown","setMarkdowntext","e","target","value","__html"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,WAAP,CACA,OAAQC,IAAR,KAAmB,iBAAnB,CAEA,GAAIC,CAAAA,MAAM,CAAGC,OAAO,CAAC,QAAD,CAApB,CAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAMC,CAAAA,eAAe,8qCAArB,CAFa,cAiDkBL,QAAQ,CAACK,eAAD,CAjD1B,wCAiDNC,QAjDM,eAiDGC,WAjDH,eAmDb,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC7BF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAKA,mBAEE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,mBAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,mBADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,UAAjB,CAA4B,IAAI,CAAC,IAAjC,CAAsC,IAAI,CAAC,MAA3C,CAAkD,WAAW,CAAC,qBAA9D,CAAoF,KAAK,CAAEL,QAA3F,CAAqG,QAAQ,CAAEE,eAA/G,EAFF,CADJ,CADJ,cAOM,2BAAK,SAAS,CAAC,UAAf,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,qBAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,oBADF,cAEE,2BAAK,uBAAuB,CAAE,CAACI,MAAM,CAAGV,MAAM,CAACI,QAAD,CAAhB,CAA9B,EAFF,CADF,CAPN,CADF,CADF,CAFF,CAsBD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {Form} from 'react-bootstrap';\n\nlet marked = require('marked');\n\nfunction App() {\n\n  const defaultMarkdown = \n`# Welcome to my React Markdown Previewer!\n## This is a sub-heading...  \n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\n  const [markdown,setMarkdown] = useState(defaultMarkdown);\n  \n  const setMarkdowntext = (e) => {\n    setMarkdown(e.target.value)\n  }\n\n\n  return (\n\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n            <div className=\"col-md-6\">\n                <Form.Group controlId=\"formBasicMarkdown\">\n                  <Form.Label className=\"text\">MarkDown Input</Form.Label>\n                  <Form.Control as=\"textarea\" rows=\"40\" type=\"text\" placeholder=\"Enter Markdown text\" value={markdown} onChange={setMarkdowntext} />\n                </Form.Group>\n          </div>\n              <div className=\"col-md-6\">\n                <Form.Group controlId=\"formBasicMarkOutput\">\n                  <Form.Label className=\"text1\">MarkDown Output</Form.Label>\n                  <div dangerouslySetInnerHTML={{__html : marked(markdown)}} />\n                </Form.Group>\n\n                </div>\n              </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}