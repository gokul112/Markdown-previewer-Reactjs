{"ast":null,"code":"var _jsxFileName = \"/Users/graj/projects/markdown-previewer/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Form } from 'react-bootstrap';\n\nlet marked = require('marked');\n\nfunction App() {\n  const defaultMarkdown = `# Welcome to my React Markdown Previewer!\n## This is a sub-heading...  \n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n  const [markdown, setMarkdown] = useState(defaultMarkdown);\n\n  const setMarkdowntext = e => {\n    setMarkdown(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicMarkdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \"MarkDown Input\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"40\",\n    type: \"text\",\n    placeholder: \"Enter Markdown text\",\n    value: markdown,\n    onChange: setMarkdowntext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicMarkOutput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"MarkDown Output\"), /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: marked(markdown)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/graj/projects/markdown-previewer/src/App.js"],"names":["React","useState","Form","marked","require","App","defaultMarkdown","markdown","setMarkdown","setMarkdowntext","e","target","value","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,eAAe,GACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CADC;AA+CA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAACK,eAAD,CAAvC;;AAEA,QAAMG,eAAe,GAAIC,CAAD,IAAO;AAE7BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAHD;;AAMA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,IAAjC;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAkD,IAAA,WAAW,EAAC,qBAA9D;AAAoF,IAAA,KAAK,EAAEL,QAA3F;AAAqG,IAAA,QAAQ,EAAEE,eAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,CADJ,eAOM;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,IAAA,uBAAuB,EAAE;AAACI,MAAAA,MAAM,EAAGV,MAAM,CAACI,QAAD;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAPN,CADF,CADF,CAFF;AAyBD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {Form} from 'react-bootstrap';\n\nlet marked = require('marked');\n\nfunction App() {\n\n  const defaultMarkdown = \n`# Welcome to my React Markdown Previewer!\n## This is a sub-heading...  \n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\n  const [markdown,setMarkdown] = useState(defaultMarkdown);\n\n  const setMarkdowntext = (e) => {\n\n    setMarkdown(e.target.value)\n  }\n\n\n  return (\n\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n            <div className=\"col-md-6\">\n                <Form.Group controlId=\"formBasicMarkdown\">\n                  <Form.Label className=\"text\">MarkDown Input</Form.Label>\n                  <Form.Control as=\"textarea\" rows=\"40\" type=\"text\" placeholder=\"Enter Markdown text\" value={markdown} onChange={setMarkdowntext} />\n                </Form.Group>\n          </div>\n              <div className=\"col-md-6\">\n                <Form.Group controlId=\"formBasicMarkOutput\">\n                  <Form.Label className=\"text1\">MarkDown Output</Form.Label>\n                  <div dangerouslySetInnerHTML={{__html : marked(markdown)}} />\n                </Form.Group>\n\n                </div>\n              </div>\n      </div>\n</div>\n\n    \n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}